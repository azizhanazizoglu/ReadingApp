digraph TS_Flow {
  rankdir=LR;
  labelloc=t;
  label="ReadingApp: TS1 -> TS2 -> TS3 Akış Diyagramı";
  fontname="Segoe UI";
  fontsize=12;
  
  /* Daha fazla boşluk için global yerleşim ayarları (biraz büyütüldü) */
  graph [nodesep=1.2, ranksep=1.3];

  node [shape=box, style="rounded,filled", fillcolor="#f8fafc", color="#94a3b8", fontname="Segoe UI", fontsize=12];
  edge [color="#64748b", fontname="Segoe UI", fontsize=11];

  subgraph cluster_client {
    label="Kullanıcı / UI";
    style="rounded,dashed";
    color="#a78bfa";
    UploadJPEG [label="JPEG Yükle\nPOST /api/upload", shape=box, fillcolor="#eef2ff"];
  Iframe [label="Iframe: Hedef Sayfa\n(React/Electron Webview)", shape=box, fillcolor="#eef2ff"];
  /* Kullanıcı tarafından tıklanan tetikleyici butonlar */
  BtnGo  [label="Buton: Sayfayı Aç / Yenile\n(Webview navigate/reload)", shape=ellipse, fillcolor="#fef9c3", color="#f59e0b"];
  BtnTS1 [label="Buton: TS1 Başlat\n(POST /api/start-automation)", shape=ellipse, fillcolor="#fef9c3", color="#f59e0b"];
  BtnTS2 [label="Buton: TS2 Mapping\n(POST /api/test-state-2)", shape=ellipse, fillcolor="#fef9c3", color="#f59e0b"];
  BtnTS3 [label="Buton: TS3 Otomatik Doldur\n(POST /api/ts3/generate-script)", shape=ellipse, fillcolor="#fef9c3", color="#f59e0b"];
  }

  subgraph cluster_backend {
    label="Backend (Flask)";
    style=rounded;
    color="#22c55e";
  TS1 [label="TS1: JPEG -> LLM -> JSON\nPOST /api/start-automation\n(run_ts1_extract)\n- license_llm/license_llm_extractor.extract_vehicle_info_from_image()\n- license_llm/license_llm_agent.py\n- llm_agent/llm_ocr_extractor.py\nInputs: jpgDownload/*.jpg\nOutputs: ruhsat_json (object), jpg2json/<base>.json", fillcolor="#ecfeff"];
  /* TS2 iki aşamalı yapıya ayrıldı: TsW (Webbot) ve Ts2L (Mapping) */
    subgraph cluster_ts2 {
      label="TS2: HTML + JSON -> Mapping";
      style="rounded,filled";
      color="#22c55e";
    fillcolor="#ecfeff";
  TS2  [label="TS2: Endpoint (handler)\nPOST /api/test-state-2\nRole: TsW -> (AND) -> Ts2L akışını başlatır"];
  GateTS2 [label="AND", shape=circle, fillcolor="#fde68a", style=filled, color="#f59e0b"];
  TsW  [label="TsW: Webbot Capture\n(html/url -> artefaktlar)\n- webbot/test_webbot_html_mapping.readWebPage()\n- webbot/selenium_fetcher.fetch_html_with_selenium() [opt]\nInputs: Iframe HTML (body.html) veya URL\nOutputs: memory.html, webbot2html/page.html, form.html?, page.json, form_meta.json"];
  Ts2L [label="Ts2L: Mapping (map_json_to_html_fields)\nhtml + ruhsat_json -> mapping\n- license_llm/pageread_llm.map_json_to_html_fields()\nInputs: html (memory) + ruhsat_json\nOutputs: mapping (object), json2mapping/<base>_mapping.json"];
      
    }
  TS3 [label="TS3: Form Doldurma (LLM yok)\nPOST /api/ts3/generate-script\n(+ in-page filler)\n- backend/routes.py (/api/ts3)\n- react_ui in-page filler\nInputs: mapping + ruhsat_json + webview context\nOutputs: DOM / user-like actions", fillcolor="#ecfeff"];
  }

  subgraph cluster_tmp {
    label="Artefaktlar (memory/TmpData)";
    style=rounded;
    color="#10b981";
  /* Data & types: yeşil tonlar ve yeşil yazı rengi */
  node [fontcolor="#065f46"];
    JPGDL [label="jpgDownload/*.jpg\n(type: image/jpeg)", fillcolor="#ecfdf5", color="#10b981"];
    J2J  [label="jpg2json/<base>.json\n(type: JSON object)", fillcolor="#ecfdf5", color="#10b981"];
    W2H  [label="webbot2html/page.html\n+ form.html? + page.json + form_meta.json\n(types: HTML, JSON)", fillcolor="#ecfdf5", color="#10b981"];
    J2M  [label="json2mapping/<base>_mapping.json\n(type: JSON object)", fillcolor="#ecfdf5", color="#10b981"];
  }

  /* Kompakt SW Bileşenleri: TS1/TS2/TS3 */
  subgraph cluster_components {
    label="Bilesenler (SW Components / Folder Structure)";
    style="rounded,dotted";
    color="#3b82f6";
    fontname="Segoe UI";
    fontsize=10;
  /* Folder structure: mavi tonlar ve mavi yazı rengi */
  node [fontcolor="#1d4ed8"];
  TS1C [label="TS1 (Folders/Modules):\n- license_llm/ (license_llm_agent.py, license_llm_extractor.py)\n- llm_agent/llm_ocr_extractor.py", shape=note, fontsize=10, color="#2563eb", fillcolor="#e0f2fe"];
  TS2C [label="TS2 (Folders/Modules):\n- webbot/test_webbot_html_mapping.py (TsW: readWebPage)\n- webbot/selenium_fetcher.py (opsiyonel: fetch_html_with_selenium)\n- license_llm/pageread_llm.py (Ts2L: map_json_to_html_fields)", shape=note, fontsize=10, color="#2563eb", fillcolor="#e0f2fe"];
    TS3C [label="TS3 (Folders/Modules):\n- backend/stateflow_agent.py\n- backend/routes.py (/api/ts3)\n- react_ui (in-page filler)", shape=note, fontsize=10, color="#2563eb", fillcolor="#e0f2fe"];
  }

  /* Bilesenler arasi yuksek seviye akış (kucuk ve noktalı) */
  TS1C -> TS2C [style=dotted, color="#94a3b8"];
  TS2C -> TS3C [style=dotted, color="#94a3b8"];

  mem [label="Bellek (memory_store)\n- ruhsat_json: object\n- html: string (current page)\n- mapping: object\n- latest_base: string", shape=box, fillcolor="#ecfdf5", color="#10b981", fontcolor="#065f46"];

  /* Yerleşim ipucu: UI ve Backend yan yana dursun (basitleştirildi) */

  /* Akış Kenarları */
  UploadJPEG -> JPGDL [label="kaydet"]; 
  JPGDL -> TS1 [label="girdi"];
  TS1 -> J2J  [label="çıktı (dosya)"];
  TS1 -> mem  [label="ruhsat_json"];
  /* Yakınlaştırma için görünmez kenar */
  Iframe -> TS1 [style=invis, weight=100];

  /* TS2 akışı: BtnTS2 -> TS2 -> TsW -> AND -> Ts2L */
  Iframe -> TsW  [label="html veya url"];
  TsW    -> W2H  [label="HTML artefaktları"];
  W2H    -> Ts2L [label="page.html + form.html (opsiyonel)", style=dashed];
  TsW    -> mem  [label="html (raw/current)"];
  mem    -> Ts2L [label="html (from TsW) + ruhsat_json"];
  Ts2L   -> J2M  [label="mapping JSON"];
  Ts2L   -> mem  [label="mapping"];
  TS2    -> GateTS2  [label="auto enable"];
  TsW    -> GateTS2  [label="auto trigger"];
  GateTS2 -> Ts2L    [label="auto trigger"];

  mem   -> TS3 [label="mapping + ruhsat_json"];
  Iframe -> TS3 [label="webview context"];
  TS3 -> Iframe [label="fill + actions", dir=both];

  /* Kullanıcı butonları tetikleme kenarları */
  BtnGo  -> Iframe [label="tıkla"];
  BtnTS1 -> TS1    [label="tıkla"];
  BtnTS2 -> TS2    [label="tıkla"];
  BtnTS3 -> TS3    [label="tıkla"];

  /* Notlar */
  note1 [label="TS2 mapping JSON, code block [json] formatından parse edilir.", shape=note, fillcolor="#fff1f2", color="#fb7185"];
  Ts2L -> note1 [style=dotted, arrowhead=none];
}
